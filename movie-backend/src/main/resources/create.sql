CREATE SCHEMA IF NOT EXISTS MOVIE;

CREATE TABLE IF NOT EXISTS MOVIE.REGISTER
(
  ID          BIGINT PRIMARY KEY NOT NULL,
  CODE        VARCHAR(10),
  NAME        VARCHAR(50),
  DESCRIPTION VARCHAR(200),
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL
);
CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_REGISTER START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

CREATE TABLE IF NOT EXISTS MOVIE.REGISTER_ITEM
(
  ID          BIGINT PRIMARY KEY NOT NULL,
  ID_REGISTER BIGINT,
  CODE        VARCHAR(10),
  NAME        VARCHAR(50),
  DESCRIPTION VARCHAR(200),
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL
);
CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_REGISTER_ITEM START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;
ALTER TABLE MOVIE.REGISTER_ITEM ADD FOREIGN KEY (ID_REGISTER) REFERENCES REGISTER (ID);


-- PARAM VARIABLE
CREATE TABLE IF NOT EXISTS MOVIE.PARAMVARIABLE
(
  ID          BIGINT             NOT NULL,
  NAME_GROUP  VARCHAR(20)        NOT NULL,
  NAME_VAR    VARCHAR(20)        NOT NULL,
  C_VALUE     VARCHAR(200),
  D_VALUE     TIMESTAMP,
  N_VALUE     DECIMAL(18, 6),
  VALID_FROM  TIMESTAMP          NOT NULL,
  VALID_TO    TIMESTAMP,
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_PARAMVARIABLE START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;


--PERSON
CREATE TABLE IF NOT EXISTS MOVIE.PERSON
(
  ID          BIGINT             NOT NULL,
  NAME        VARCHAR(30),
  SURNAME     VARCHAR(30),
  MOBIL       VARCHAR(20),
  PHONE       VARCHAR(20),
  EMAIL       VARCHAR(150),
  STREET      VARCHAR(50),
  STREET_NUM  VARCHAR(10),
  CITY        VARCHAR(30),
  COUNTRY     VARCHAR(30),
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_PERSON START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

CREATE TABLE IF NOT EXISTS MOVIE.RIGHTS
(
  ID          BIGINT             NOT NULL,
  CODE        VARCHAR(10),
  NAME        VARCHAR(50),
  DESCRIPTION VARCHAR(200),
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL,
  PRIMARY KEY (ID)
);


CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_RIGHTS START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;


CREATE TABLE IF NOT EXISTS MOVIE.USERS
(
  ID          BIGINT             NOT NULL,
  ID_PERSON   BIGINT,
  USERNAME    VARCHAR(20)        NOT NULL,
  PASS        VARCHAR(50)        NOT NULL,
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_USERS START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;
ALTER TABLE MOVIE.USERS ADD FOREIGN KEY (ID_PERSON) REFERENCES MOVIE.PERSON(ID);


CREATE TABLE IF NOT EXISTS MOVIE.USERS_GROUP
(
  ID          BIGINT             NOT NULL,
  ID_USERS    BIGINT,
  ID_GROUP    BIGINT,
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL,
  PRIMARY KEY (ID)
);
CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_USERS_GROUP START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;



CREATE TABLE IF NOT EXISTS MOVIE.GROUPS
(
  ID          BIGINT             NOT NULL,
  CODE        VARCHAR(10),
  NAME        VARCHAR(50),
  DESCRIPTION VARCHAR(200),
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL,
  PRIMARY KEY (ID)
);
CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_GROUPS START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

CREATE TABLE IF NOT EXISTS MOVIE.GROUP_RIGHTS
(
  ID          BIGINT             NOT NULL,
  ID_RIGHT    BIGINT,
  ID_GROUP    BIGINT,
  INS_USERS   BIGINT,
  MODIF_USERS BIGINT,
  DELETED     SMALLINT DEFAULT 0 NOT NULL,
  PRIMARY KEY (ID)
);
CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_GROUP_RIGHTS START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

ALTER TABLE MOVIE.GROUP_RIGHTS ADD FOREIGN KEY (ID_GROUP) REFERENCES MOVIE.GROUPS (ID);
ALTER TABLE MOVIE.GROUP_RIGHTS ADD FOREIGN KEY (ID_RIGHT) REFERENCES MOVIE.RIGHTS (ID);
ALTER TABLE MOVIE.USERS_GROUP ADD FOREIGN KEY (ID_USERS) REFERENCES MOVIE.USERS (ID);
ALTER TABLE MOVIE.USERS_GROUP ADD FOREIGN KEY (ID_GROUP) REFERENCES MOVIE.GROUPS (ID);

CREATE TABLE IF NOT EXISTS MOVIE.MOVIE (
  ID BIGINT NOT NULL,
  CZECH_NAME VARCHAR(250),
  ORIG_NAME VARCHAR(250),
  GENRE BIGINT,
  DESCRIPTION VARCHAR(4096),
  COUNTRY BIGINT,
  IMAGE VARCHAR(250),
  LENGTH VARCHAR(5),
  YEAR VARCHAR(5),
  INS_USERS BIGINT,
  MODIF_USERS BIGINT,
  DELETED SMALLINT NOT NULL DEFAULT 0,
  CSFD VARCHAR(1024),
  IMDB VARCHAR(1024),
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_MOVIE START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

CREATE TABLE IF NOT EXISTS MOVIE.DVD (
  ID BIGINT NOT NULL,
  ID_MOVIE BIGINT NOT NULL,
  NUMBER BIGINT,
  INS_USERS BIGINT,
  MODIF_USERS BIGINT,
  DELETED SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);

ALTER TABLE MOVIE.DVD ADD FOREIGN KEY  (ID_MOVIE) REFERENCES MOVIE.MOVIE(ID);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_DVD START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

CREATE TABLE IF NOT EXISTS MOVIE.ACTOR (
  ID BIGINT NOT NULL,
  NAME VARCHAR(30),
  SURNAME VARCHAR(30),
  INS_USERS BIGINT,
  MODIF_USERS BIGINT,
  DELETED SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_ACTOR START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

CREATE TABLE IF NOT EXISTS MOVIE.ACTORS (
  ID BIGINT NOT NULL,
  ID_MOVIE BIGINT,
  ID_ACTOR BIGINT,
  INS_USERS BIGINT,
  MODIF_USERS BIGINT,
  DELETED SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);


CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_ACTORS START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

ALTER TABLE MOVIE.ACTORS ADD FOREIGN KEY  (ID_MOVIE) REFERENCES MOVIE.MOVIE(ID);
ALTER TABLE MOVIE.ACTORS ADD FOREIGN KEY  (ID_ACTOR) REFERENCES MOVIE.ACTOR(ID);


CREATE TABLE IF NOT EXISTS MOVIE.DELETEDDVDNUMBER (
  ID BIGINT NOT NULL,
  DVDNUMBER BIGINT NOT NULL,
  PRIMARY KEY (ID)
);


CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_DELETEDDVDNUMBER START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

CREATE TABLE  IF NOT EXISTS MOVIE.DIRECTOR (
  ID BIGINT NOT NULL,
  NAME VARCHAR(30),
  SURNAME VARCHAR(30),
  INS_USERS BIGINT,
  MODIF_USERS BIGINT,
  DELETED SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_DIRECTOR START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;


CREATE TABLE IF NOT EXISTS MOVIE.DIRECTORS (
  ID BIGINT NOT NULL,
  ID_MOVIE BIGINT,
  ID_DIRECTOR BIGINT,
  INS_USERS BIGINT,
  MODIF_USERS BIGINT,
  DELETED SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_DIRECTORS START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

ALTER TABLE MOVIE.DIRECTORS ADD FOREIGN KEY  (ID_MOVIE) REFERENCES MOVIE.MOVIE(ID);
ALTER TABLE MOVIE.DIRECTORS ADD FOREIGN KEY  (ID_DIRECTOR) REFERENCES MOVIE.DIRECTOR(ID);

CREATE TABLE IF NOT EXISTS MOVIE.BORROW (
  ID BIGINT NOT NULL,
  ID_DVD BIGINT NOT NULL,
  ID_PERSON BIGINT NOT NULL,
  DATE_BORROW DATE,
  DATE_RETURN DATE,
  INS_USERS BIGINT,
  MODIF_USERS BIGINT,
  DELETED SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS MOVIE.SQ_BORROW START WITH 1 INCREMENT BY 1  MINVALUE 1 CACHE 20;

ALTER TABLE MOVIE.BORROW ADD FOREIGN KEY  (ID_DVD) REFERENCES MOVIE.DVD(ID);
ALTER TABLE MOVIE.BORROW ADD FOREIGN KEY  (ID_PERSON) REFERENCES MOVIE.PERSON(ID);


